public  DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();
        String[] column_title = {"Name", "Gender", "Shift", "Age","UID"};
        Vector<String> columnNames = new Vector<String>();
        columnNames.add("Name");
        columnNames.add("Gender");
        columnNames.add("Shift");
        columnNames.add("Age");
        columnNames.add("UID");

        int columnCount = metaData.getColumnCount();
        
        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    public static void main(String[] args) {
        Revision_4 apps = new Revision_4();
        
    }
    
    public void update(){
        try{
            //Load Driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            //Establish Connection
            conn = DriverManager.getConnection(db_url, db_username, db_pwd);
            
            //Database Operation
            String sql = "UPDATE table4 SET name=?, gender = ?, shift=?, age=? where uid = ?";
            
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, cbo_name.getSelectedItem().toString());
            stmt.setString(2, cbo_gender.getSelectedItem().toString());
            stmt.setString(3, cbo_shift.getSelectedItem().toString());
            stmt.setString(4, txt_age.getText());
//            stmt.setString(5, txt_uid.getText());
            stmt.setInt(5, Integer.parseInt(txt_uid.getText()));
            
            int update;
            update = stmt.executeUpdate();
            
            if(update>0){
                //Success
                JOptionPane.showMessageDialog(frame, "Update Operation Success!");
                clear_form();
            }
            else{
                JOptionPane.showMessageDialog(frame, "Update Operation Failed!");
                //Fail
            }
            
            draw_table();
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(frame, "Error: "+ex);
        }
    }
    
    public void delete(){
        try{
            //Load Driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            //Establish Connection
            conn = DriverManager.getConnection(db_url, db_username, db_pwd);
            
            //Database Operation
            String sql = "Delete from table4 where uid = ?";
            
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, Integer.parseInt(txt_uid.getText()));
            
            int delete;
            delete = stmt.executeUpdate();
            
            if(delete>0){
                //Success
                JOptionPane.showMessageDialog(frame, "Delete Operation Success!");
                clear_form();
            }
            else{
                JOptionPane.showMessageDialog(frame, "Delete Operation Failed!");
                //Fail
            }
            
            draw_table();
            clear_form();
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(frame, "Error: "+ex);
        }
    }
    
    public boolean validation_fetch(){
        boolean is_empty = true;
        String param1 = txt_fetch.getText();
        if(param1 == "" || param1.length()==0){
            is_empty = true;
        }
        else{
            is_empty = false;
        }
        
        return is_empty;
    }
    
    public void insert_data(){
        
        if(validation_form() == false){
            try{
             //Load Driver
             Class.forName("com.mysql.cj.jdbc.Driver");

             //Establish Connection
             conn = DriverManager.getConnection(db_url, db_username, db_pwd);

             //Database Operation
             String sql_insert = "INSERT INTO table4 (name, gender, shift, age) VALUES (?, ?, ?, ?)";
             PreparedStatement stmt = conn.prepareStatement(sql_insert);
             stmt.setString(1, cbo_name.getSelectedItem().toString());
             stmt.setString(2, cbo_gender.getSelectedItem().toString());
             stmt.setString(3, cbo_shift.getSelectedItem().toString());
             stmt.setString(4, txt_age.getText());

             int insert;
             insert = stmt.executeUpdate();

             if(insert>0){
                 //Success
                 JOptionPane.showMessageDialog(frame, "Insert Operation Success!");
             }
             else{
                 JOptionPane.showMessageDialog(frame, "Insert Operation Failed!");
                 //Fail
             }

             draw_table();
             clear_form();
             }catch(Exception ex){
                JOptionPane.showMessageDialog(frame, "Error: "+ex);
            } 
        }
        else{
            JOptionPane.showMessageDialog(frame, "Please enter data");
        }
        
     }
    
    public void set_data(){
        //Fetch Single Data
        if(validation_fetch()== false){
            //not empty
            int uid;
            //Set uid var
            uid = Integer.parseInt(txt_fetch.getText());

            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                conn = DriverManager.getConnection(db_url, db_username, db_pwd);
                String sql = "Select * from table4 where uid = ?";
                PreparedStatement statement = conn.prepareStatement(sql, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                statement.setInt(1, uid);
                //Insert data from datbase to resultset
                rs = statement.executeQuery();

                //Read data from resultset to form
                if(rs.next()){                
                    rs.beforeFirst();
                    while(rs.next()){

                    cbo_name.setSelectedItem(rs.getString("name"));
                    cbo_gender.setSelectedItem(rs.getString("gender"));
                    cbo_shift.setSelectedItem(rs.getString("shift"));
                    txt_age.setText(rs.getString("age"));
//                    txt_vendor.setText(rs.getString("material_vendor"));
                    txt_uid.setText(rs.getString("uid"));
                    
                    }
                    JOptionPane.showMessageDialog(frame, "Data Fetched!");
//                    display_delete_update();
//                    hide_insert();
                }
                else{
                    JOptionPane.showMessageDialog(frame, "There is no data with that ID..");
                }


            }catch(Exception ex){
                JOptionPane.showMessageDialog(frame, "Error:"+ex);
            }
        }
        else{
            //empty
            JOptionPane.showMessageDialog(frame, "Please Enter an ID");
        }
        
    }
    
    
    
    public void draw_table() throws SQLException{
        fetch_all();
        table.setModel(buildTableModel(rs));
    }
    
    public void clear_form(){
        cbo_name.setSelectedIndex(0);
        cbo_gender.setSelectedIndex(0);
        cbo_shift.setSelectedIndex(0);
        txt_age.setText("");
        txt_uid.setText("");
    }
    
    public boolean validation_form(){
        boolean is_empty = true;
        //String param1 = txt_ic.getText();
        if(txt_age.getText().length() == 0 || txt_age.getText().length() == 0){
            is_empty = true;
        }
        else{
            try{
                Integer.parseInt(txt_age.getText());
                is_empty = false;
            }catch(Exception e){
                is_empty = true;
            }
        }
        return is_empty;
    }
    
    public void fetch_all(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(db_url, db_username, db_pwd);
            String sql = "Select * from table4";
            PreparedStatement statement = conn.prepareStatement(sql);
            
            rs = statement.executeQuery();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(frame, "Error:"+ex);
        }
    }
